Blue Crab GIS

A Geographic Information System for Blue Crab population monitoring using PyQt5, OpenStreetMap, and Leaflet.js.

Features

- Interactive GIS map with dark mode and population visualization
- Data upload via CSV or manual entry
- Population analytics with charts and heatmaps
- SQLite database integration
- Customizable settings
- Optimized for performance on low-spec laptops

Installation

1. Clone this repository

2. Install dependencies:
   pip install -r requirements.txt

3. Run the application:
   python main.py

Blue Crab GIS Project Structure
=============================

Root Directory
-------------
├── LICENSE                     # MIT License file
├── main.py                    # Main application entry point
├── run_erd.py                 # ERD (Entity Relationship Diagram) runner
├── requirements.txt           # Python package dependencies
├── readme                     # Project documentation
├── FOLDER_STRUCTURE.txt       # This file - project structure documentation

├── .git/                      # Git version control directory
│   └── ...                    # Git configuration files

├── assets/                    # Static assets directory
│   └── map/                   # Map-related assets
│       └── gis_map.html       # Generated map HTML file

├── data/                      # Data storage directory
│   └── ...                    # Database and data files

├── GeoJson/                   # Geographic data files
│   └── map.geojson           # Map GeoJSON data

└── src/                       # Source code directory
    ├── __init__.py           # Python package marker
    ├── gis_map.py            # GIS map implementation
    ├── main_window.py        # Main application window
    ├── sidebar.py            # Sidebar navigation
    ├── about.py              # About page
    ├── settings.py           # Application settings
    ├── dashboard.py          # Dashboard implementation
    ├── analytics.py          # Analytics implementation
    ├── datasets.py           # Dataset management
    ├── upload_data.py        # Data upload functionality
    └── utils/                # Utility modules
        ├── __init__.py       # Package marker
        ├── database.py       # Database management
        ├── map_controls.py   # Map control widgets
        └── glass_controls.py # Glass-effect UI controls

Notes:
- The project follows a modular structure with clear separation of concerns
- Source code is organized in the src/ directory with utility modules in src/utils/
- Static assets and data are stored in separate directories
- Configuration and documentation files are in the root directory 

Performance Optimization

The application implements several optimizations for low-spec laptops:

1. Hardware acceleration for QWebEngineView
2. Local tile caching for Negros Island region
3. Loading map from file instead of injecting HTML
4. Reduced Leaflet map load with frontend optimizations
5. Vector tiles option for better performance
6. Developer tools disabled in production

License

This project is licensed under the MIT License - see the LICENSE file for details.
